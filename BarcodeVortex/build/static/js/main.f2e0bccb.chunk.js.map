{"version":3,"sources":["Fonts/taller_evolution_rev.ttf","Fonts/Cabin-Regular.ttf","components/BarcodeGen.tsx","theme.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["module","exports","BarcodeGen","useState","formatType","setFormatType","sortType","setSortType","value","setValue","Msg","setMsg","searchCode","setSearchCode","split","filteredArr","setFilteredArr","arr","setArr","initials","setInitials","showIndex","setShowIndex","useEffect","map","v","updateArray","newArray","filter","word","toLowerCase","includes","config","lineColor","background","marginTop","marginBottom","fontOptions","width","textMargin","format","valid","p","className","paddingLeft","style","backgroundColor","color","justifyContent","height","src","alt","placement","DrawerPlacements","Left","isOpen","flexDirection","flexWrap","margin","size","onChange","e","currentTarget","placeholder","options","label","boxShadow","fontSize","borderColor","Right","Array","from","Set","sort","ini","indx","variant","disabled","onClick","id","element","document","getElementById","bodyRect","body","getBoundingClientRect","top","offsetPosition","window","scrollTo","behavior","handleScroll","key","title","alignSelf","paddingRight","type","marginRight","fontWeight","display","reverse","length","val","breakpoints","fonts","base","heading","serif","icon","fontWeights","borders","none","xs","sm","dashed","fontSizes","space","lineHeights","xxSmall","xSmall","small","medium","large","xLarge","xxLarge","letterSpacings","negativeSmall","negativeMedium","negativeLarge","radii","md","lg","full","shadows","xlarge","negativeXLarge","borderStyles","solid","dotted","double","borderWidths","colorShadeDefinition","saturation","light","colors","text","h1","h2","h3","h4","h5","h6","link","input","inputPlaceholder","button_dark","button_light","button_disabled","button_outline","palette","black","white","grey","lighter","default","dark","darker","blue","brown","green","lime","olive","orange","pink","purple","red","teal","violet","yellow","slate","snow","steel","variants","primary","bg","hover","secondary","alternative","success","danger","warning","info","Boolean","location","hostname","match","ReactDOM","render","customTheme","theme","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6LAAAA,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,2C,8HCuB5B,SAASC,IAAc,IAAD,EACCC,mBAAS,WADV,mBAC5BC,EAD4B,KAChBC,EADgB,OAEHF,mBAAS,YAFN,mBAE5BG,EAF4B,KAElBC,EAFkB,OAGTJ,mBAAS,IAHA,mBAG5BK,EAH4B,KAGrBC,EAHqB,OAIbN,mBAAS,cAJI,mBAI5BO,EAJ4B,KAIvBC,EAJuB,OAKCR,mBAAS,IALV,mBAK5BS,EAL4B,KAKhBC,EALgB,OAMGV,mBAASK,EAAMM,MAAM,OANxB,mBAM5BC,EAN4B,KAMfC,EANe,OAObb,mBAASK,EAAMM,MAAM,OAPR,mBAO5BG,EAP4B,KAOvBC,EAPuB,OAQHf,mBAAS,CAAC,KARP,mBAQ5BgB,EAR4B,KAQlBC,EARkB,OASDjB,oBAAS,GATR,mBAS5BkB,EAT4B,KASjBC,EATiB,KAWnCC,qBAAU,WACRP,EAAeR,EAAMM,MAAM,OAC3BI,EAAOV,EAAMM,MAAM,OACnBM,EAAYZ,EAAMM,MAAM,MAAMU,KAAI,SAAAC,GAAC,OAAIA,EAAE,OACzCZ,EAAc,MACb,CAACL,IAEJe,qBAAU,WACRP,EAAeR,EAAMM,MAAM,OAC3BY,MACC,CAACd,IAEJW,qBAAU,WACR,OAAQjB,GACN,IAAK,WACHoB,IACAJ,GAAa,GACb,MACF,IAAK,MAGL,IAAK,OACHA,GAAa,MAKhB,CAAChB,IAEJ,IAAMoB,EAAc,WAClB,IAAIC,EAAWV,EAAIW,QAAO,SAAAC,GAAI,OAC5BA,EAAKC,cAAcC,SAASnB,EAAWkB,kBAEzCd,EAAeW,IAgBXK,EAAS,CACbC,UAAW,UACXC,WAAY,UACZC,UAAW,OACXC,aAAc,OACdC,YAAa,OACbC,MAAO,EACPC,WAAY,GACZC,OAAQpC,EACRqC,MAAO,SAACC,MAcV,OACE,yBAAKC,UAAU,OACb,kBAAC,SAAD,CAAQC,YAAY,OAClB,kBAAC,SAAD,CACEC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAC5CC,eAAe,iBAEf,kBAAC,aAAD,KACE,yBAAKC,OAAO,OAAOC,IAAI,kBAAkBC,IAAI,UAE/C,wBAAIR,UAAU,WAAd,mBAEF,kBAAC,SAAD,CACEG,gBAAgB,UAChBR,MAAM,MACNc,UAAWC,mBAAiBC,KAC5BC,QAAM,EACNV,MAAO,CAAEC,gBAAiB,YAE1B,kBAAC,cAAD,KAAc,oBACd,kBAAC,gBAAD,KACE,kBAAC,OAAD,CAAMU,cAAc,SAASC,SAAS,QACpC,kBAAC,MAAD,CAAKZ,MAAO,CAAEa,OAAQ,cACpB,kBAAC,cAAD,CAAaC,KAAK,SAChB,kBAAC,YAAD,CAAWZ,MAAM,SAAS,iBAC1B,kBAAC,aAAD,CACEa,SAAU,SAACC,GACTxD,EAAcwD,EAAEC,cAActD,OAC9BC,EAAS,IACTE,EAAO,cACPJ,EAAY,aAEdC,MAAOJ,EACP2D,YAAa,gBACbC,QA7CF,CACd,CAAExD,MAAO,UAAWyD,MAAO,eAC3B,CAAEzD,MAAO,OAAQyD,MAAO,UA4CRpB,MAAO,CACLC,gBAAiB,UACjBC,MAAO,YAIb,6BACA,6BACA,kBAAC,cAAD,CAAaY,KAAK,SAChB,kBAAC,YAAD,CAAWZ,MAAM,SAAS,YAC1B,kBAAC,WAAD,CACEmB,UAAU,QACVjB,OAAO,QACPc,YAAY,mBACZlB,MAAO,CACLsB,SAAU,GACVC,YAAa,UACbtB,gBAAiB,UACjBC,MAAO,SAETkB,MAAM,mBACNzD,MAAOA,EACPoD,SAAU,SAACC,GACTpD,EAASoD,EAAEC,cAActD,OACpBqD,EAAEC,cAActD,MAEdG,EAAO,IADZA,EAAO,eAGX+C,OAAO,gBAQnB,kBAAC,SAAD,CACEZ,gBAAgB,UAChBC,MAAM,QACNT,MAAM,MACNc,UAAWC,mBAAiBgB,MAC5Bd,QAAM,GAEN,kBAAC,cAAD,KAAc,QAEd,kBAAC,gBAAD,KACE,kBAAC,aAAD,CACEK,SAAU,SAACC,GACTtD,EAAYsD,EAAEC,cAActD,QAE9BA,MAAOF,EACP0D,QA5FQ,CAClB,CAAExD,MAAO,WAAYyD,MAAO,YAC5B,CAAEzD,MAAO,MAAOyD,MAAO,aACvB,CAAEzD,MAAO,OAAQyD,MAAO,eA0FdnB,gBAAgB,UAChBC,MAAM,QACNW,OAAO,YAGX,kBAAC,cAAD,KAAc,YACd,8BACE,uBAAGf,UAAU,6BADf,gCAKA,kBAAC,gBAAD,CAAeA,UAAU,cACtB2B,MAAMC,KAAK,IAAIC,IAAIrD,EAASsD,SAASjD,KACpC,SAACkD,EAAKC,GAAN,MACY,KAAVnE,GACE,kBAAC,SAAD,CACEoE,QAAQ,UACRC,UAAWxD,EACXiB,MAAO,IACPK,UAAU,WACVmC,QAAS,kBA/IN,SAACC,GACpB,IAAMC,EAAUC,SAASC,eAAeH,GAElCI,EAAWF,SAASG,KAAKC,wBAAwBC,IAGjDC,EAFcP,EAASK,wBAAwBC,IACfH,EAHvB,IAKfK,OAAOC,SAAS,CACdH,IAAKC,EACLG,SAAU,WAsImBC,CAAa,IAAD,OAAKjB,KAChCkB,IAAKjB,GAEJD,QAOb,kBAAC,YAAD,CACE5B,gBAAgB,UAChB+C,MAAO,uBAGT,kBAAC,gBAAD,CAAe/C,gBAAgB,WAC7B,kBAAC,MAAD,CAAKA,gBAAgB,WACnB,kBAAC,OAAD,KACE,uBACED,MAAO,CAAEiD,UAAW,SAAUC,aAAc,QAC5CpD,UAAU,uBAEZ,kBAAC,QAAD,CACEoB,YAAa,iBACbiC,KAAK,OACLxF,MAAOI,EACPgD,SAAU,SAACC,GACThD,EAAcgD,EAAEC,cAActD,OAC9BkB,KAEFoB,gBAAgB,UAChBC,MAAM,QACNkD,YAAY,SAEd,kBAAC,SAAD,CACEpD,MAAO,CACLC,gBAAiB,UACjBC,MAAO,QACPmD,WAAY,KAEdpB,QAAS,kBAAMjE,EAAc,MAN/B,UAWF,6BAGc,QAAbP,GACC,wBAAIuC,MAAO,CAAEsD,QAAS,SAAWpF,EAAY0D,QAGjC,SAAbnE,GACC,wBAAIuC,MAAO,CAAEsD,QAAS,SACnBpF,EAAY0D,OAAO2B,WAGxB,kBAAC,OAAD,CAAM3C,SAAS,QACM,YAAlBzB,EAAOQ,QAAuC,IAAfvB,EAAIoF,QAA2B,KAAXpF,EAAI,GACpDF,EAAYS,KAAI,SAAC8E,EAAK3B,GAAN,OACd,yBACEI,GAAE,WAAMuB,EAAI,IACZzD,MAAO,CACLa,OAAQ,WACRpB,MAAO,OAETsD,IAAKjB,GAEL,8BACE,oCAAUA,EAAO,EAAjB,KAA8B,KAEhC,kBAAC,IAAD,eAASnE,MAAO8F,GAAStE,QAG7B,MAGa,SAAlBA,EAAOQ,QACN,4EAEF,kBAAC,OAAD,CAAMiB,SAAS,QACM,SAAlBzB,EAAOQ,QAAoC,IAAfvB,EAAIoF,QAA2B,KAAXpF,EAAI,GACjDF,EAAYS,KAAI,SAAC8E,EAAK3B,GAAN,OACd,yBACEI,GAAE,WAAMuB,EAAI,IACZzD,MAAO,CAAEa,OAAQ,WAAYpB,MAAO,OACpCsD,IAAKjB,GAEL,8BACE,oCAAUA,EAAO,EAAjB,KAA8B,KAEhC,kBAAC,IAAD,eAASnE,MAAO8F,GAAStE,QAG7B,MAEN,6BACCtB,GAAO,4BAAKA,GACb,iCCvTG,OACb6F,YAAa,CAAC,QAAS,QAAS,SAAU,UAC1CC,MAAO,CACLC,KAAM,qCACNC,QAAS,2CACTC,MAAO,kBACPC,KAAM,sBAERC,YAAa,CACX,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,KAETC,QAAS,CACPC,KAAM,EACNC,GAAI,YACJC,GAAI,YACJC,OAAQ,cAEVC,UAAW,CACT,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,QAERC,MAAO,CACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,EAAK,MACL,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,OACN,GAAM,QAERC,YAAa,CACXC,QAAS,GACTC,OAAQ,EACRC,MAAO,KACPC,OAAQ,KACRC,MAAO,KACPC,OAAQ,KACRC,QAAS,KAEXC,eAAgB,CACdd,KAAM,EACNe,cAAe,SACfC,eAAgB,SAChBC,cAAe,SACfR,MAAO,QACPC,OAAQ,QACRC,MAAO,OAETO,MAAO,CACLlB,KAAM,EACNE,GAAI,MACJiB,GAAI,MACJC,GAAI,OACJC,KAAM,OAERC,QAAS,CACPb,MAAO,wCACPC,OAAQ,yCACRC,MAAO,yCACPY,OAAQ,wCACRR,cAAe,yCACfC,eAAgB,0CAChBC,cAAe,0CACfO,eAAgB,0CAElBC,aAAc,CACZC,MAAO,QACPvB,OAAQ,SACRwB,OAAQ,SACRC,OAAQ,UAEVC,aAAc,CACZ7B,KAAM,EACNS,MAAO,MACPC,OAAQ,MACRC,MAAO,OAETmB,qBAAsB,CACpBC,WAAY,GACZC,MAAO,KAETC,OAAQ,CACNC,KAAM,CACJC,GAAI,YACJC,GAAI,YACJC,GAAI,aACJC,GAAI,QACJC,GAAI,OACJC,GAAI,eACJnE,KAAM,UACNoE,KAAM,UACNC,MAAO,UACPC,iBAAkB,UAClBC,YAAa,QACbC,aAAc,QACdC,gBAAiB,UACjBC,eAAgB,QAElBC,QAAS,CACPC,MAAO,OACPC,MAAO,UACPC,KAAM,CACJC,QAAS,UACTC,QAAS,UACTC,KAAM,UACNC,OAAQ,WAEVC,KAAM,CACJH,QAAS,UACTC,KAAM,WAERG,MAAO,CACLJ,QAAS,UACTC,KAAM,WAERI,MAAO,CACL1B,MAAO,UACPqB,QAAS,UACTC,KAAM,WAERK,KAAM,CACJN,QAAS,UACTC,KAAM,WAERM,MAAO,CACLP,QAAS,UACTC,KAAM,WAERO,OAAQ,CACN7B,MAAO,UACPqB,QAAS,UACTC,KAAM,WAERQ,KAAM,CACJT,QAAS,UACTC,KAAM,WAERS,OAAQ,CACNV,QAAS,UACTC,KAAM,WAERU,IAAK,CACHX,QAAS,UACTC,KAAM,WAERW,KAAM,CACJZ,QAAS,UACTC,KAAM,WAERY,OAAQ,CACNb,QAAS,UACTC,KAAM,WAERa,OAAQ,CACNd,QAAS,UACTC,KAAM,WAERc,MAAO,CACLpC,MAAO,UACPqB,QAAS,WAEXgB,KAAM,CACJjB,QAAS,UACTpB,MAAO,UACPqB,QAAS,UACTC,KAAM,WAERgB,MAAO,CACLlB,QAAS,UACTpB,MAAO,UACPqB,QAAS,UACTC,KAAM,UACNC,OAAQ,YAGZgB,SAAU,CACRC,QAAS,CAAEC,GAAI,OAAQC,MAAO,CAAED,GAAI,aAAezI,MAAO,SAC1D2I,UAAW,CAAEF,GAAI,QAASC,MAAO,CAAED,GAAI,SAAWzI,MAAO,SACzD4I,YAAa,CAAEH,GAAI,OAAQC,MAAO,CAAED,GAAI,aAAezI,MAAO,SAC9D6I,QAAS,CAAEJ,GAAI,QAASC,MAAO,CAAED,GAAI,cAAgBzI,MAAO,SAC5D8I,OAAQ,CAAEL,GAAI,MAAOC,MAAO,CAAED,GAAI,YAAczI,MAAO,SACvD+I,QAAS,CAAEN,GAAI,SAAUC,MAAO,CAAED,GAAI,eAAiBzI,MAAO,SAC9DgJ,KAAM,CAAEP,GAAI,OAAQC,MAAO,CAAED,GAAI,aAAezI,MAAO,SACvDgG,MAAO,CACLyC,GAAI,eACJC,MAAO,CAAED,GAAI,cACbzI,MAAO,SAETsH,KAAM,CAAEmB,GAAI,YAAaC,MAAO,CAAED,GAAI,eAAiBzI,MAAO,YCxMhDiJ,QACW,cAA7BxG,OAAOyG,SAASC,UAEe,UAA7B1G,OAAOyG,SAASC,UAEhB1G,OAAOyG,SAASC,SAASC,MACvB,2D,cCVNC,IAASC,OAAO,mBCDD,WACb,OACE,kBAAC,gBAAD,CAAeC,YAAaC,GAC1B,kBAACrM,EAAD,SDFU,MAAS+E,SAASC,eAAe,SDmI3C,kBAAmBsH,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f2e0bccb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/taller_evolution_rev.59266850.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Cabin-Regular.b308848b.ttf\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Textarea,\r\n  Layout,\r\n  Header,\r\n  HeaderLogo,\r\n  Drawer,\r\n  DrawerTitle,\r\n  DrawerPlacements,\r\n  DrawerContent,\r\n  ActionBar,\r\n  LayoutContent,\r\n  Box,\r\n  SelectHTML,\r\n  Flex,\r\n  FormLabel,\r\n  FormControl,\r\n  Input,\r\n  Button\r\n} from \"@oplog/express\";\r\nimport \"../App.css\";\r\nimport Barcode from \"react-hooks-barcode\";\r\n\r\nexport default function BarcodeGen() {\r\n  const [formatType, setFormatType] = useState(\"CODE128\");\r\n  const [sortType, setSortType] = useState(\"unsorted\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [Msg, setMsg] = useState(\"No Barcode\");\r\n  const [searchCode, setSearchCode] = useState(\"\");\r\n  const [filteredArr, setFilteredArr] = useState(value.split(\"\\n\"));\r\n  const [arr, setArr] = useState(value.split(\"\\n\"));\r\n  const [initials, setInitials] = useState([\"\"]);\r\n  const [showIndex, setShowIndex] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFilteredArr(value.split(\"\\n\"));\r\n    setArr(value.split(\"\\n\"));\r\n    setInitials(value.split(\"\\n\").map(v => v[0]));\r\n    setSearchCode(\"\");\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    setFilteredArr(value.split(\"\\n\"));\r\n    updateArray();\r\n  }, [searchCode]);\r\n\r\n  useEffect(() => {\r\n    switch (sortType) {\r\n      case \"unsorted\":\r\n        updateArray();\r\n        setShowIndex(false);\r\n        break;\r\n      case \"asc\":\r\n        setShowIndex(true);\r\n        break;\r\n      case \"desc\":\r\n        setShowIndex(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [sortType]);\r\n\r\n  const updateArray = () => {\r\n    var newArray = arr.filter(word =>\r\n      word.toLowerCase().includes(searchCode.toLowerCase())\r\n    );\r\n    setFilteredArr(newArray);\r\n  };\r\n\r\n  const handleScroll = (id: string) => {\r\n    const element = document.getElementById(id);\r\n    const offset = 125;\r\n    const bodyRect = document.body.getBoundingClientRect().top;\r\n    const elementRect = element!.getBoundingClientRect().top;\r\n    const elementPosition = elementRect - bodyRect;\r\n    const offsetPosition = elementPosition - offset;\r\n    window.scrollTo({\r\n      top: offsetPosition,\r\n      behavior: \"smooth\"\r\n    });\r\n  };\r\n\r\n  const config = {\r\n    lineColor: \"#ffffff\",\r\n    background: \"#4b4b4b\",\r\n    marginTop: \"20px\",\r\n    marginBottom: \"15px\",\r\n    fontOptions: \"bold\",\r\n    width: 2,\r\n    textMargin: 15,\r\n    format: formatType,\r\n    valid: (p: any) => {}\r\n  };\r\n\r\n  const options = [\r\n    { value: \"CODE128\", label: \"BARCODE-128\" },\r\n    { value: \"EAN8\", label: \"EAN-8\" }\r\n  ];\r\n\r\n  const sortOptions = [\r\n    { value: \"unsorted\", label: \"Unsorted\" },\r\n    { value: \"asc\", label: \"Ascending\" },\r\n    { value: \"desc\", label: \"Descending\" }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout paddingLeft=\"15%\">\r\n        <Header\r\n          style={{ backgroundColor: \"#EAB543\", color: \"black\" }}\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <HeaderLogo>\r\n            <img height=\"40px\" src=\"images/icon.png\" alt=\"logo\" />\r\n          </HeaderLogo>\r\n          <h1 className=\"heading\">barcode vortex</h1>\r\n        </Header>\r\n        <Drawer\r\n          backgroundColor=\"#f0f0f0\"\r\n          width=\"15%\"\r\n          placement={DrawerPlacements.Left}\r\n          isOpen\r\n          style={{ backgroundColor: \"#3d3d3d\" }}\r\n        >\r\n          <DrawerTitle>{\"Generate Barcode\"}</DrawerTitle>\r\n          <DrawerContent>\r\n            <Flex flexDirection=\"column\" flexWrap=\"wrap\">\r\n              <Box style={{ margin: \"10px 10px\" }}>\r\n                <FormControl size=\"large\">\r\n                  <FormLabel color=\"white\">{\"Barcode Types\"}</FormLabel>\r\n                  <SelectHTML\r\n                    onChange={(e: any) => {\r\n                      setFormatType(e.currentTarget.value);\r\n                      setValue(\"\");\r\n                      setMsg(\"No Barcode\");\r\n                      setSortType(\"unsorted\");\r\n                    }}\r\n                    value={formatType}\r\n                    placeholder={\"Choose Format\"}\r\n                    options={options}\r\n                    style={{\r\n                      backgroundColor: \"#4b4b4b\",\r\n                      color: \"white\"\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <FormControl size=\"large\">\r\n                  <FormLabel color=\"white\">{\"Barcodes\"}</FormLabel>\r\n                  <Textarea\r\n                    boxShadow=\"large\"\r\n                    height=\"400px\"\r\n                    placeholder=\"Enter Barcode(s)\"\r\n                    style={{\r\n                      fontSize: 18,\r\n                      borderColor: \"#878787\",\r\n                      backgroundColor: \"#4b4b4b\",\r\n                      color: \"white\"\r\n                    }}\r\n                    label=\"Enter value here\"\r\n                    value={value}\r\n                    onChange={(e: any) => {\r\n                      setValue(e.currentTarget.value);\r\n                      if (!e.currentTarget.value) {\r\n                        setMsg(\"No Barcode\");\r\n                      } else setMsg(\"\");\r\n                    }}\r\n                    margin=\"normal\"\r\n                  />\r\n                </FormControl>\r\n              </Box>\r\n            </Flex>\r\n          </DrawerContent>\r\n        </Drawer>\r\n\r\n        <Drawer\r\n          backgroundColor=\"#3d3d3d\"\r\n          color=\"white\"\r\n          width=\"12%\"\r\n          placement={DrawerPlacements.Right}\r\n          isOpen\r\n        >\r\n          <DrawerTitle>{\"Sort\"}</DrawerTitle>\r\n\r\n          <DrawerContent>\r\n            <SelectHTML\r\n              onChange={(e: any) => {\r\n                setSortType(e.currentTarget.value);\r\n              }}\r\n              value={sortType}\r\n              options={sortOptions}\r\n              backgroundColor=\"#4b4b4b\"\r\n              color=\"white\"\r\n              margin=\"0 10px\"\r\n            />\r\n          </DrawerContent>\r\n          <DrawerTitle>{\"Indexing\"}</DrawerTitle>\r\n          <span>\r\n            <i className=\"far fa-info-circle fa-1x\" /> Sort activates index\r\n            search\r\n          </span>\r\n\r\n          <DrawerContent className=\"sortPannel\">\r\n            {Array.from(new Set(initials.sort())).map(\r\n              (ini, indx) =>\r\n                value !== \"\" && (\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    disabled={!showIndex}\r\n                    width={0.18}\r\n                    className=\"indexing\"\r\n                    onClick={() => handleScroll(`_${ini}`)}\r\n                    key={indx}\r\n                  >\r\n                    {ini}\r\n                  </Button>\r\n                )\r\n            )}\r\n          </DrawerContent>\r\n        </Drawer>\r\n\r\n        <ActionBar\r\n          backgroundColor=\"#3d3d3d\"\r\n          title={\"Generated Barcodes\"}\r\n        ></ActionBar>\r\n\r\n        <LayoutContent backgroundColor=\"#3d3d3d\">\r\n          <Box backgroundColor=\"#3d3d3d\">\r\n            <Flex>\r\n              <i\r\n                style={{ alignSelf: \"center\", paddingRight: \"15px\" }}\r\n                className=\"fa fa-search fa-2x\"\r\n              ></i>\r\n              <Input\r\n                placeholder={\"Search Barcode\"}\r\n                type=\"text\"\r\n                value={searchCode}\r\n                onChange={(e: any) => {\r\n                  setSearchCode(e.currentTarget.value);\r\n                  updateArray();\r\n                }}\r\n                backgroundColor=\"#4b4b4b\"\r\n                color=\"white\"\r\n                marginRight=\"15px\"\r\n              />\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"#EAB543\",\r\n                  color: \"black\",\r\n                  fontWeight: 400\r\n                }}\r\n                onClick={() => setSearchCode(\"\")}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </Flex>\r\n            <br />\r\n\r\n            {/* applying sorting filter on the array */}\r\n            {sortType === \"asc\" && (\r\n              <h1 style={{ display: \"none\" }}>{filteredArr.sort()}</h1>\r\n            )}\r\n\r\n            {sortType === \"desc\" && (\r\n              <h1 style={{ display: \"none\" }}>\r\n                {filteredArr.sort().reverse()}\r\n              </h1>\r\n            )}\r\n            <Flex flexWrap=\"wrap\">\r\n              {config.format === \"CODE128\" && arr.length !== 0 && arr[0] !== \"\"\r\n                ? filteredArr.map((val, indx) => (\r\n                    <div\r\n                      id={`_${val[0]}`}\r\n                      style={{\r\n                        margin: \"10px 0px\",\r\n                        width: \"50%\"\r\n                      }}\r\n                      key={indx}\r\n                    >\r\n                      <span>\r\n                        <strong>B{indx + 1}:</strong>{\" \"}\r\n                      </span>\r\n                      <Barcode value={val} {...config} />\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Flex>\r\n\r\n            {config.format === \"EAN8\" && (\r\n              <h3>Please enter 7 characters to autocomplete it</h3>\r\n            )}\r\n            <Flex flexWrap=\"wrap\">\r\n              {config.format === \"EAN8\" && arr.length !== 0 && arr[0] !== \"\"\r\n                ? filteredArr.map((val, indx) => (\r\n                    <div\r\n                      id={`_${val[0]}`}\r\n                      style={{ margin: \"10px 0px\", width: \"50%\" }}\r\n                      key={indx}\r\n                    >\r\n                      <span>\r\n                        <strong>B{indx + 1}:</strong>{\" \"}\r\n                      </span>\r\n                      <Barcode value={val} {...config} />\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </Flex>\r\n            <br />\r\n            {Msg && <h2>{Msg}</h2>}\r\n            <br />\r\n          </Box>\r\n        </LayoutContent>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n","export default {\r\n  breakpoints: [\"600px\", \"900px\", \"1200px\", \"1800px\"],\r\n  fonts: {\r\n    base: \"Lato, Helvetica, Arial, sans-serif\",\r\n    heading: \"Montserrat, Helvetica, Arial, sans-serif\",\r\n    serif: \"PT Serif, serif\",\r\n    icon: \"Font Awesome 5 Pro\"\r\n  },\r\n  fontWeights: {\r\n    \"100\": 100,\r\n    \"200\": 200,\r\n    \"300\": 300,\r\n    \"400\": 400,\r\n    \"500\": 500,\r\n    \"600\": 600,\r\n    \"700\": 700,\r\n    \"800\": 800,\r\n    \"900\": 900\r\n  },\r\n  borders: {\r\n    none: 0,\r\n    xs: \"1px solid\",\r\n    sm: \"4px solid\",\r\n    dashed: \"2px dashed\"\r\n  },\r\n  fontSizes: {\r\n    \"10\": \"10px\",\r\n    \"11\": \"11px\",\r\n    \"12\": \"12px\",\r\n    \"13\": \"13px\",\r\n    \"14\": \"14px\",\r\n    \"16\": \"16px\",\r\n    \"18\": \"18px\",\r\n    \"22\": \"22px\",\r\n    \"26\": \"26px\",\r\n    \"28\": \"28px\",\r\n    \"32\": \"32px\",\r\n    \"40\": \"40px\",\r\n    \"52\": \"52px\"\r\n  },\r\n  space: {\r\n    \"0\": \"0px\",\r\n    \"4\": \"4px\",\r\n    \"6\": \"6px\",\r\n    \"8\": \"8px\",\r\n    \"11\": \"11px\",\r\n    \"16\": \"16px\",\r\n    \"22\": \"22px\",\r\n    \"30\": \"30px\",\r\n    \"38\": \"38px\", // fazlalık\r\n    \"44\": \"44px\",\r\n    \"60\": \"60px\",\r\n    \"64\": \"64px\"\r\n  },\r\n  lineHeights: {\r\n    xxSmall: 0.9,\r\n    xSmall: 1,\r\n    small: 1.14,\r\n    medium: 1.25,\r\n    large: 1.34,\r\n    xLarge: 1.43,\r\n    xxLarge: 1.5\r\n  },\r\n  letterSpacings: {\r\n    none: 0,\r\n    negativeSmall: \"-0.2px\",\r\n    negativeMedium: \"-0.3px\",\r\n    negativeLarge: \"-0.4px\",\r\n    small: \"0.2px\",\r\n    medium: \"0.4px\",\r\n    large: \"1px\"\r\n  },\r\n  radii: {\r\n    none: 0,\r\n    sm: \"3px\",\r\n    md: \"6px\",\r\n    lg: \"12px\",\r\n    full: \"50%\"\r\n  },\r\n  shadows: {\r\n    small: \"0 6px 10px 0 rgba(199, 199, 199, 0.1)\",\r\n    medium: \"0 6px 10px 0 rgba(199, 199, 199, 0.15)\",\r\n    large: \"0 6px 10px 0 rgba(199, 199, 199, 0.25)\",\r\n    xlarge: \"0 6px 10px 0 rgba(199, 199, 199, 0.4)\",\r\n    negativeSmall: \"0 -6px 10px 0 rgba(199, 199, 199, 0.1)\",\r\n    negativeMedium: \"0 -6px 10px 0 rgba(199, 199, 199, 0.15)\",\r\n    negativeLarge: \"0 -6px 10px 0 rgba(199, 199, 199, 0.25)\",\r\n    negativeXLarge: \"0 -6px 10px 0 rgba(199, 199, 199, 0.4)\"\r\n  },\r\n  borderStyles: {\r\n    solid: \"solid\",\r\n    dashed: \"dashed\",\r\n    dotted: \"dotted\",\r\n    double: \"double\"\r\n  },\r\n  borderWidths: {\r\n    none: 0,\r\n    small: \"1px\",\r\n    medium: \"2px\",\r\n    large: \"4px\"\r\n  },\r\n  colorShadeDefinition: {\r\n    saturation: 0.1,\r\n    light: 0.05\r\n  },\r\n  colors: {\r\n    text: {\r\n      h1: \"grey_dark\",\r\n      h2: \"grey_dark\",\r\n      h3: \"steel_dark\",\r\n      h4: \"steel\",\r\n      h5: \"grey\",\r\n      h6: \"grey_lighter\",\r\n      body: \"#7f7f7f\",\r\n      link: \"#4a90e2\",\r\n      input: \"#6b6b6b\",\r\n      inputPlaceholder: \"#bbbbbb\",\r\n      button_dark: \"black\",\r\n      button_light: \"white\",\r\n      button_disabled: \"#cdcdcd\",\r\n      button_outline: \"grey\"\r\n    },\r\n    palette: {\r\n      black: \"#000\",\r\n      white: \"#ffffff\",\r\n      grey: {\r\n        lighter: \"#c9c9c9\",\r\n        default: \"#9b9b9b\",\r\n        dark: \"#707070\",\r\n        darker: \"#4a4a4a\"\r\n      },\r\n      blue: {\r\n        default: \"#96bce8\",\r\n        dark: \"#84addb\"\r\n      },\r\n      brown: {\r\n        default: \"#a5673f\",\r\n        dark: \"#995b32\"\r\n      },\r\n      green: {\r\n        light: \"#c2e89b\",\r\n        default: \"#9ad6a6\",\r\n        dark: \"#87c994\"\r\n      },\r\n      lime: {\r\n        default: \"#b8e986\",\r\n        dark: \"#a8db74\"\r\n      },\r\n      olive: {\r\n        default: \"#b5cc18\",\r\n        dark: \"#a8bf0d\"\r\n      },\r\n      orange: {\r\n        light: \"#ffd986\",\r\n        default: \"#fac486\",\r\n        dark: \"#eeb574\"\r\n      },\r\n      pink: {\r\n        default: \"#e03997\",\r\n        dark: \"#d42a8a\"\r\n      },\r\n      purple: {\r\n        default: \"#abb4eb\",\r\n        dark: \"#97a0de\"\r\n      },\r\n      red: {\r\n        default: \"#ef7d8d\",\r\n        dark: \"#e36b7b\"\r\n      },\r\n      teal: {\r\n        default: \"#50e3c2\",\r\n        dark: \"#42bda2\"\r\n      },\r\n      violet: {\r\n        default: \"#6435c9\",\r\n        dark: \"#5728bd\"\r\n      },\r\n      yellow: {\r\n        default: \"#ffd578\",\r\n        dark: \"#f2c666\"\r\n      },\r\n      slate: {\r\n        light: \"#b0b8d1\",\r\n        default: \"#5c5f68\"\r\n      },\r\n      snow: {\r\n        lighter: \"#fafafa\",\r\n        light: \"#f0f1f4\",\r\n        default: \"#e0e0e0\",\r\n        dark: \"#dadada\"\r\n      },\r\n      steel: {\r\n        lighter: \"#ededf1\",\r\n        light: \"#dcdde6\",\r\n        default: \"#d9dae2\",\r\n        dark: \"#b8b9c1\",\r\n        darker: \"#b5b6bd\"\r\n      }\r\n    },\r\n    variants: {\r\n      primary: { bg: \"teal\", hover: { bg: \"teal_dark\" }, color: \"white\" },\r\n      secondary: { bg: \"black\", hover: { bg: \"black\" }, color: \"white\" },\r\n      alternative: { bg: \"blue\", hover: { bg: \"blue_dark\" }, color: \"white\" },\r\n      success: { bg: \"green\", hover: { bg: \"green_dark\" }, color: \"white\" },\r\n      danger: { bg: \"red\", hover: { bg: \"red_dark\" }, color: \"white\" },\r\n      warning: { bg: \"yellow\", hover: { bg: \"yellow_dark\" }, color: \"black\" },\r\n      info: { bg: \"blue\", hover: { bg: \"blue_dark\" }, color: \"white\" },\r\n      light: {\r\n        bg: \"grey_lighter\",\r\n        hover: { bg: \"grey_light\" },\r\n        color: \"white\"\r\n      },\r\n      dark: { bg: \"grey_dark\", hover: { bg: \"grey_darker\" }, color: \"white\" }\r\n    }\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./Fonts/taller_evolution_rev.ttf\";\nimport \"./Fonts/Cabin-Regular.ttf\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport BarcodeGen from \"./components/BarcodeGen\";\nimport { ThemeProvider } from \"@oplog/express\";\nimport theme from \"./theme\";\n\nexport default function App() {\n  return (\n    <ThemeProvider customTheme={theme}>\n      <BarcodeGen />\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}